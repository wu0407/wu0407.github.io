<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>源码解析 on xiaoqing</title>
    <link>https://midbai.com/tags/%E6%BA%90%E7%A0%81%E8%A7%A3%E6%9E%90/</link>
    <description>Recent content in 源码解析 on xiaoqing</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Fri, 19 Feb 2021 11:21:49 +0800</lastBuildDate><atom:link href="https://midbai.com/tags/%E6%BA%90%E7%A0%81%E8%A7%A3%E6%9E%90/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>kubelet启动--FeatureGate初始化</title>
      <link>https://midbai.com/post/kubelet-run-feature-gate-init/</link>
      <pubDate>Fri, 19 Feb 2021 11:21:49 +0800</pubDate>
      
      <guid>https://midbai.com/post/kubelet-run-feature-gate-init/</guid>
      <description>&lt;p&gt;kubernetes有很多的功能特性，这些特性一般都有关联的KEP。特性的成熟度有alpha、beta、GA、Deprecated，alpha代表不稳定，beta代表相对稳定有可能有bug，GA代表已经可用。 特性的生命阶段有KEP提出、alpha阶段、beta阶段、GA阶段、废弃。alpha阶段默认不启用，beta阶段默认启用 。更多feature gate相关知识请访问&amp;ndash;&lt;a href=&#34;https://kubernetes.io/docs/reference/command-line-tools-reference/feature-gates/&#34;&gt;Feature Gates&lt;/a&gt;和&lt;a href=&#34;https://github.com/kubernetes/enhancements/blob/master/keps/sig-architecture/0000-kep-process/README.md&#34;&gt;KEP&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;feature gate用来控制某项特性打开或关闭，当然GA的特性不能关闭。本文以kubelet源码为例，分析feature gate如何工作的。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>kubelet启动--日志初始化</title>
      <link>https://midbai.com/post/kubelet-run-log-init/</link>
      <pubDate>Wed, 17 Feb 2021 21:14:20 +0800</pubDate>
      
      <guid>https://midbai.com/post/kubelet-run-log-init/</guid>
      <description>&lt;p&gt;kubernetes 默认使用的日志库是klog，kubernetes的&lt;code&gt;k8s.io/component-base/logs&lt;/code&gt;库，专门做日志初始化相关操作。&lt;/p&gt;
&lt;p&gt;klog是glog的fork版本，由于glog不在开发、在容器中运行有一系列问题、不容易测试等问题，所以kubenetes自己维护了一个klog。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>kubelet启动--命令行初始化</title>
      <link>https://midbai.com/post/kubelet-run-command-line-init/</link>
      <pubDate>Wed, 17 Feb 2021 12:07:53 +0800</pubDate>
      
      <guid>https://midbai.com/post/kubelet-run-command-line-init/</guid>
      <description>概述 kubelet命令行参数有177个，是kubernetes组件中配置项最多的。 kubelet的选项分为三类，一类是kubletFlags&amp;ndash;（启动之后不能随时改变的，只能通过命令行配置，比如ip地址、路径等）；另一类是kube</description>
    </item>
    
    <item>
      <title>Taint Manager源码解析</title>
      <link>https://midbai.com/post/taint-manager/</link>
      <pubDate>Sun, 03 Jan 2021 22:29:10 +0800</pubDate>
      
      <guid>https://midbai.com/post/taint-manager/</guid>
      <description>&lt;p&gt;taint manager是由pod和node事件触发执行，根据node或pod绑定的node是否有的noExcute taint，如果有则对node上所有的pod或这个pod执行删除。&lt;/p&gt;
&lt;p&gt;在&lt;a href=&#34;https://midbai.com/post/node-lifecycle-controller-manager/&#34;&gt;上篇的node lifecycle controller&lt;/a&gt;中,如果启用了taint manager就会调用NewNoExecuteTaintManager对taint manager进行初始化。&lt;/p&gt;
&lt;p&gt;在node lifecycle controller中定义了pod事件和node事件的handler，在启用taint manager时候还会将pod事件和node事件放入到taint manager里的nodeUpdateQueue和podUpdateQueue。&lt;/p&gt;
&lt;p&gt;同时在node lifecycle controller中会启动一个goroutine 执行taintManager.Run(stopCh)。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Node Lifecycle Controller Manager源码解析</title>
      <link>https://midbai.com/post/node-lifecycle-controller-manager/</link>
      <pubDate>Sat, 26 Dec 2020 20:50:47 +0800</pubDate>
      
      <guid>https://midbai.com/post/node-lifecycle-controller-manager/</guid>
      <description>&lt;p&gt;Node Lifecycle Controller根据node的lease和node status更新时间，决定是否驱逐node上的pod或设置taint，设置node ready condition为unknown。&lt;/p&gt;
&lt;p&gt;并且根据整个集群状态和zone里不同数量的unready node，设置不同的node速率-来添加taint或执行驱逐pod。&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>
